The output shows that we are reading invalid memory at line number 9 in main function. It also suggests that the 0x0 address is not assigned.

command: valgrind --leak-check=yes ./null
==8854== Memcheck, a memory error detector
==8854== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==8854== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==8854== Command: ./null
==8854==
==8854== Invalid read of size 4
==8854==    at 0x4004DB: main (null.c:9)
==8854==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==8854==
==8854==
==8854== Process terminating with default action of signal 11 (SIGSEGV)
==8854==  Access not within mapped region at address 0x0
==8854==    at 0x4004DB: main (null.c:9)
==8854==  If you believe this happened as a result of a stack
==8854==  overflow in your program's main thread (unlikely but
==8854==  possible), you can try to increase the size of the
==8854==  main thread stack using the --main-stacksize= flag.
==8854==  The main thread stack size used in this run was 10485760.
==8854==
==8854== HEAP SUMMARY:
==8854==     in use at exit: 0 bytes in 0 blocks
==8854==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==8854==
==8854== All heap blocks were freed -- no leaks are possible
==8854==
==8854== For lists of detected and suppressed errors, rerun with: -s
==8854== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
zsh: segmentation fault  valgrind --leak-check=yes ./null
