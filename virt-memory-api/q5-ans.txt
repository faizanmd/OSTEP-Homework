The program runs normally.

valgrind --leak-check=yes ./q5
==31615== Memcheck, a memory error detector
==31615== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==31615== Using Valgrind-3.20.0 and LibVEX; rerun with -h for copyright info
==31615== Command: ./q5
==31615==
==31615== Invalid write of size 4
==31615==    at 0x4004E7: main (q5.c:7)
==31615==  Address 0x51ea1d0 is 0 bytes after a block of size 400 alloc'd
==31615==    at 0x4C2D0E5: malloc (vg_replace_malloc.c:393)
==31615==    by 0x4004D8: main (q5.c:5)
==31615==
==31615==
==31615== HEAP SUMMARY:
==31615==     in use at exit: 400 bytes in 1 blocks
==31615==   total heap usage: 1 allocs, 0 frees, 400 bytes allocated
==31615==
==31615== 400 bytes in 1 blocks are definitely lost in loss record 1 of 1
==31615==    at 0x4C2D0E5: malloc (vg_replace_malloc.c:393)
==31615==    by 0x4004D8: main (q5.c:5)
==31615==
==31615== LEAK SUMMARY:
==31615==    definitely lost: 400 bytes in 1 blocks
==31615==    indirectly lost: 0 bytes in 0 blocks
==31615==      possibly lost: 0 bytes in 0 blocks
==31615==    still reachable: 0 bytes in 0 blocks
==31615==         suppressed: 0 bytes in 0 blocks
==31615==
==31615== For lists of detected and suppressed errors, rerun with: -s
==31615== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Valgrind tells us that we are referring to out of bound index. Last valid index is 99.

Program is incorrect because of reasons mentioned above.
